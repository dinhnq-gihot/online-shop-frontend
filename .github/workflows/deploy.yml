name: Deploy

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_VERSION: latest # ${{ github.ref_name }}_${{ github.sha }}

jobs:
  ci:
    name: CI
    uses: ./.github/workflows/ci.yml
    secrets:
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

  # deploy:
  #   name: Deploy Container
  #   needs:
  #     - ci
  #   if: |
  #     always() &&
  #     (needs.ci.result == 'success' || needs.ci.result == 'cancelled')     
  #   runs-on: self-hosted

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ secrets.REGISTRY_USERNAME }}
  #         password: ${{ secrets.REGISTRY_TOKEN  }}

  #     - name: Deploy to server
  #       run: |
  #         # Pull the new image
  #         docker pull ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.IMAGE_VERSION }}

  #         # Remove all containers in docker compose
  #         docker compose -f ./docker/docker-compose.yaml down

  #         # Stop and remove any container using port 5080
  #         CONTAINER_IDS=$(docker ps -q --filter "publish=1433" --filter "publish=5214")
  #         if [ -n "$CONTAINER_IDS" ]; then
  #           for CONTAINER_ID in $CONTAINER_IDS; do
  #             docker rm -f $CONTAINER_ID
  #           done
  #         fi
          
  #         # Start the new container
  #         docker compose -f ./docker/docker-compose.yaml up -d
          
  #         # Clean up old images
  #         docker image prune -f

  #     - name: Check deployment
  #       run: |
  #         # Wait for container to start
  #         sleep 10
  #         # Check if container is running
  #         if ! docker ps | grep online-shop-frontend; then
  #           echo "Container is not running"
  #           exit 1
  #         fi